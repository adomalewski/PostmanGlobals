{
  "id": "5c251c45-519a-de62-ca64-b1fe4cc67649",
  "name": "Postman Globals",
  "values": [
    {
      "key": "MiscScript",
      "value": "var found; var name; var result; function findData(jsonData, paramArray) {     found = false;     Object.keys(jsonData).map(function(f) {         if(found) return;         if(f == paramArray[0]) {             if(paramArray.length > 1) {                 if(jsonData[f] != null) {                     findData(jsonData[f], paramArray.slice(1));                 }             }             else {                 found = true;                 name = f;                 result = jsonData[f];                 return;             }         }         else {             if(typeof jsonData[f] == 'object' && jsonData[f] != null)                 findData(jsonData[f], paramArray);         }     }) }  function findDataEx(jsonData, paramArray) {     result = null;     findData(jsonData, paramArray);     return result; }  var results = []; var names = []; var paramArgs; var paramName; var paramDeep; var paramOrder; var currOrder; var currDeep = 0; function findDataList(jsonData, paramArray) {     if(currDeep == 0) {         paramArgs = paramArray[0].split(':');         paramName = paramArgs[0];         paramDeep = -1;         paramOrder = -1;         if(paramArgs.length > 1) {             paramDeep = paramArgs[1];         }         if(paramName.startsWith('#')){             var number = parseInt(paramName.substring(1));             if(number.isInteger())                 paramOrder = number;         }     }          currOrder = 0;     Object.keys(jsonData).map(function(f) {         if((paramDeep == -1 || currDeep == paramDeep) && ((paramName == '*' || f == paramName) || (paramOrder != -1 && currOrder == paramOrder))) {             if(paramArray.length > 1) {                 if(jsonData[f] != null) {                     var lvlCurrDeep = currDeep;                     var lvlParamName = paramName;                     var lvlParamDeep = paramDeep;                     var lvlParamOrder = paramOrder;                     var lvlCurrOrder = currOrder;                     currDeep = 0;                     findDataList(jsonData[f], paramArray.slice(1));                     currDeep = lvlCurrDeep;                     paramName = lvlParamName;                     paramDeep = lvlParamDeep;                     paramOrder = lvlParamOrder;                     currOrder = lvlCurrOrder;                 }             }             else {                 names.push(f);                 results.push(jsonData[f]);             }         }         else {             if(typeof jsonData[f] == 'object' && jsonData[f] != null && (paramDeep == -1 || currDeep < paramDeep)) {                 currDeep++;                 findDataList(jsonData[f], paramArray);                 currDeep--;             }         }         currOrder++;     }); }  function findDataListEx(jsonData, paramArray) {     results = [];     names = [];     currDeep = 0;     findDataList(jsonData, paramArray);     return results; }  function verifyMathEquality(value1, value2) {     var accuracy = 1000;     return Math.floor(Math.round(value1*accuracy)) === Math.floor(Math.round(value2*accuracy)); }  function date2shortDateStr(fullDateStr) {     var longDate = new Date(fullDateStr);     var isoLongDateStr = longDate.toISOString();     return isoLongDateStr.substring(0, 10); }  function checkDateIfStrABeforeStrB(dateStrA, dateStrB) {     var dateA = new Date(dateStrA);     var dateB = new Date(dateStrB);     return dateA < dateB; }",
      "enabled": true,
      "type": "text"
    }
  ],
  "_postman_variable_scope": "globals",
  "_postman_exported_at": "2017-09-08T13:18:24.024Z",
  "_postman_exported_using": "Postman/5.2.0"
}